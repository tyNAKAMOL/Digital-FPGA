////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : LDR_LED.vf
// /___/   /\     Timestamp : 12/15/2021 12:03:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog E:/2D/Digital/finalAssignment/Final_Assignment_Digital_SmartHome/LDR_LED.vf -w E:/2D/Digital/finalAssignment/Final_Assignment_Digital_SmartHome/LDR_LED.sch
//Design Name: LDR_LED
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FTC_HXILINX_LDR_LED(Q, C, CLR, T);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              T;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;
  
   
 
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else if(T)
          Q <= !Q;
     end
   
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_LDR_LED(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module Counter_UP_0_3_withTC_MUSER_LDR_LED(CLK_IN, 
                                           CLR_FF, 
                                           D0, 
                                           D1, 
                                           TC);

    input CLK_IN;
    input CLR_FF;
   output D0;
   output D1;
   output TC;
   
   wire XLXN_1;
   wire D0_DUMMY;
   wire D1_DUMMY;
   
   assign D0 = D0_DUMMY;
   assign D1 = D1_DUMMY;
   (* HU_SET = "XLXI_1_0" *) 
   FJKC_HXILINX_LDR_LED  XLXI_1 (.C(CLK_IN), 
                                .CLR(CLR_FF), 
                                .J(XLXN_1), 
                                .K(XLXN_1), 
                                .Q(D0_DUMMY));
   (* HU_SET = "XLXI_2_1" *) 
   FJKC_HXILINX_LDR_LED  XLXI_2 (.C(CLK_IN), 
                                .CLR(CLR_FF), 
                                .J(D0_DUMMY), 
                                .K(D0_DUMMY), 
                                .Q(D1_DUMMY));
   VCC  XLXI_4 (.P(XLXN_1));
   AND2  XLXI_5 (.I0(D1_DUMMY), 
                .I1(D0_DUMMY), 
                .O(TC));
endmodule
`timescale 1ns / 1ps

module LDR_LED(CLK_IN_1HZ, 
               LDR, 
               LED_LDR);

    input CLK_IN_1HZ;
    input LDR;
   output LED_LDR;
   
   wire XLXN_3;
   wire XLXN_7;
   wire XLXN_17;
   wire XLXN_19;
   wire LED_LDR_DUMMY;
   
   assign LED_LDR = LED_LDR_DUMMY;
   AND2  XLXI_2 (.I0(XLXN_7), 
                .I1(LDR), 
                .O(XLXN_19));
   AND2  XLXI_3 (.I0(CLK_IN_1HZ), 
                .I1(LDR), 
                .O(XLXN_3));
   (* HU_SET = "XLXI_4_2" *) 
   FTC_HXILINX_LDR_LED  XLXI_4 (.C(XLXN_19), 
                               .CLR(XLXN_17), 
                               .T(XLXN_19), 
                               .Q(LED_LDR_DUMMY));
   Counter_UP_0_3_withTC_MUSER_LDR_LED  XLXI_5 (.CLK_IN(XLXN_3), 
                                               .CLR_FF(LED_LDR_DUMMY), 
                                               .D0(), 
                                               .D1(), 
                                               .TC(XLXN_7));
   INV  XLXI_6 (.I(LDR), 
               .O(XLXN_17));
endmodule
